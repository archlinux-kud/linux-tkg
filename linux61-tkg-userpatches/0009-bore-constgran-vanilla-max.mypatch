Patchset adapted below is adapted to apply over existing ZENIFY patches, and
will be applied regardless if we are using BORE or not which is doesn't matter.

  From 6758adc6a354f18a32b704e8f8ef1f6021515e51 Mon Sep 17 00:00:00 2001
  From: Masahito S <firelzrd@gmail.com>
  Date: Fri, 28 Apr 2023 01:07:13 +0900
  Subject: [PATCH] constgran v4 sched: Make latency / granularity constant
   tunable_scaling = 1 (logarithmic) -> 0 (constant) latency_ns = variable
   6-24ms -> constant 12.8ms min_granularity_ns = variable 0.75-3ms -> constant
   1.6ms wakeup_granularity_ns = variable 1-4ms -> constant 6.4ms

https://github.com/firelzrd/bore-scheduler/blob/main/bore-stable/0002-constgran-vanilla-max.patch

diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
index 02741a824374..e910f6360a35 100644
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -70,9 +70,13 @@
  * (to see the precise effective timeslice length of your workload,
  *  run vmstat and monitor the context-switches (cs) field)
  *
- * (default: 6ms * (1 + ilog(ncpus)), units: nanoseconds)
+ * (BORE default: 24ms constant, units: nanoseconds)
+ * (CFS  default: 6ms * (1 + ilog(ncpus)), units: nanoseconds)
  */
-#ifdef CONFIG_ZENIFY
+#if defined(CONFIG_SCHED_BORE)
+unsigned int sysctl_sched_latency			= 24000000ULL;
+static unsigned int normalized_sysctl_sched_latency	= 24000000ULL;
+#elif defined(CONFIG_ZENIFY)
 unsigned int sysctl_sched_latency			= 4000000ULL;
 static unsigned int normalized_sysctl_sched_latency	= 4000000ULL;
 #else
@@ -89,16 +93,25 @@ static unsigned int normalized_sysctl_sched_latency	= 6000000ULL;
  *   SCHED_TUNABLESCALING_LOG - scaled logarithmical, *1+ilog(ncpus)
  *   SCHED_TUNABLESCALING_LINEAR - scaled linear, *ncpus
  *
- * (default SCHED_TUNABLESCALING_LOG = *(1+ilog(ncpus))
+ * (BORE default SCHED_TUNABLESCALING_NONE = *1 constant)
+ * (CFS  default SCHED_TUNABLESCALING_LOG  = *(1+ilog(ncpus))
  */
+#ifdef CONFIG_SCHED_BORE
+unsigned int sysctl_sched_tunable_scaling = SCHED_TUNABLESCALING_NONE;
+#else
 unsigned int sysctl_sched_tunable_scaling = SCHED_TUNABLESCALING_LOG;
+#endif
 
 /*
  * Minimal preemption granularity for CPU-bound tasks:
  *
- * (default: 0.75 msec * (1 + ilog(ncpus)), units: nanoseconds)
+ * (BORE default: 3 msec constant, units: nanoseconds)
+ * (CFS  default: 0.75 msec * (1 + ilog(ncpus)), units: nanoseconds)
  */
-#ifdef CONFIG_ZENIFY
+#if defined(CONFIG_SCHED_BORE)
+unsigned int sysctl_sched_min_granularity			= 3000000ULL;
+static unsigned int normalized_sysctl_sched_min_granularity	= 3000000ULL;
+#elif defined(CONFIG_ZENIFY)
 unsigned int sysctl_sched_min_granularity			= 400000ULL;
 static unsigned int normalized_sysctl_sched_min_granularity	= 400000ULL;
 #else
@@ -136,9 +149,15 @@ unsigned int sysctl_sched_child_runs_first __read_mostly;
  * and reduces their over-scheduling. Synchronous workloads will still
  * have immediate wakeup/sleep latencies.
  *
- * (default: 1 msec * (1 + ilog(ncpus)), units: nanoseconds)
+ * (BORE default: 4 msec constant, units: nanoseconds)
+ * (CFS  default: 1 msec * (1 + ilog(ncpus)), units: nanoseconds)
  */
-#ifdef CONFIG_ZENIFY
+#if defined(CONFIG_SCHED_BORE)
+unsigned int sysctl_sched_wakeup_granularity			= 4000000UL;
+static unsigned int normalized_sysctl_sched_wakeup_granularity	= 4000000UL;
+
+const_debug unsigned int sysctl_sched_migration_cost	= 500000UL;
+#elif defined(CONFIG_ZENIFY)
 unsigned int sysctl_sched_wakeup_granularity			= 500000UL;
 static unsigned int normalized_sysctl_sched_wakeup_granularity	= 500000UL;
 
